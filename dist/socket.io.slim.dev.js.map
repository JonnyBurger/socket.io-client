{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///socket.io.slim.dev.js","webpack:///webpack/bootstrap 129cdc7fc07a86b7a8e4","webpack:///./lib/index.js","webpack:///./lib/url.js","webpack:///./~/parseuri/index.js","webpack:///./support/noop.js","webpack:///./~/socket.io-parser/index.js","webpack:///./~/component-emitter/index.js","webpack:///./~/socket.io-parser/binary.js","webpack:///./~/isarray/index.js","webpack:///./~/socket.io-parser/is-buffer.js","webpack:///./lib/manager.js","webpack:///./~/@jonny/engine.io-client/lib/index.js","webpack:///./~/@jonny/engine.io-client/lib/socket.js","webpack:///./~/@jonny/engine.io-client/lib/transports/index.js","webpack:///./~/@jonny/engine.io-client/lib/transports/websocket.js","webpack:///./~/@jonny/engine.io-client/lib/transport.js","webpack:///./~/@jonny/engine.io-parser/lib/browser.js","webpack:///./~/@jonny/engine.io-parser/lib/keys.js","webpack:///./~/has-binary2/index.js","webpack:///./~/arraybuffer.slice/index.js","webpack:///./~/after/index.js","webpack:///./~/@jonny/engine.io-parser/lib/utf8.js","webpack:///./~/parseqs/index.js","webpack:///./~/component-inherit/index.js","webpack:///./~/yeast/index.js","webpack:///./lib/socket.js","webpack:///./~/to-array/index.js","webpack:///./lib/on.js","webpack:///./~/component-bind/index.js","webpack:///./~/backo2/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","lookup","uri","opts","undefined","io","parsed","url","source","path","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","Manager","query","socket","parser","managers","protocol","connect","Socket","loc","obj","location","host","charAt","test","parseuri","port","ipv6","indexOf","href","re","parts","str","src","b","e","substring","replace","length","exec","i","authority","ipv6uri","Encoder","encodeAsString","type","BINARY_EVENT","BINARY_ACK","attachments","nsp","data","payload","tryStringify","ERROR_PACKET","JSON","stringify","encodeAsBinary","callback","writeEncoding","bloblessData","deconstruction","binary","deconstructPacket","pack","packet","buffers","unshift","removeBlobs","Decoder","reconstructor","decodeString","Number","types","error","buf","Error","next","tryParse","substr","isPayloadValid","ERROR","isArray","parse","BinaryReconstructor","reconPack","msg","Emitter","isBuf","CONNECT","DISCONNECT","EVENT","ACK","prototype","encode","encoding","add","emit","base64","takeBinaryData","destroy","finishedReconstruction","binData","push","reconstructPacket","mixin","key","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","args","slice","len","listeners","hasListeners","_deconstructPacket","placeholder","_placeholder","num","newData","Array","Date","_reconstructPacket","toString","Object","withNativeBlob","Blob","withNativeFile","File","packetData","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","FileReader","onload","result","readAsArrayBuffer","arr","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","ArrayBuffer","isView","buffer","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","Backoff","min","max","jitter","timeout","readyState","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","open","eio","bind","has","hasOwnProperty","emitAll","updateSocketIds","generateId","engine","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","self","skipReconnect","openSub","onopen","errorSub","cleanup","err","timer","setTimeout","close","clearTimeout","onping","onpong","ondata","ondecoded","onerror","onConnecting","index","encodedPackets","write","options","processPacketQueue","shift","subsLength","sub","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","hostname","secure","parseqs","decode","upgrade","forceJSONP","jsonp","forceBase64","enablesXDR","withCredentials","timestampParam","timestampRequests","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","ca","forceNode","isReactNative","navigator","product","toLowerCase","extraHeaders","keys","localAddress","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","clone","o","priorWebsocketSuccess","Transport","createTransport","name","EIO","transport","sid","requestTimeout","protocols","setTransport","onDrain","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","upgrading","pause","flush","freezeTransport","onTransportClose","onupgrade","to","onOpen","l","onHandshake","setPing","code","filterUpgrades","onHeartbeat","ping","sendPacket","writable","compress","cleanupAndClose","waitForUpgrade","desc","filteredUpgrades","j","websocket","WS","perMessageDeflate","usingBrowserWebSocket","BrowserWebSocket","WebSocketImpl","NodeWebSocket","inherit","yeast","WebSocket","MozWebSocket","window","doOpen","check","agent","pfx","passphrase","cert","ciphers","rejectUnauthorized","headers","ws","supports","addEventListeners","onmessage","ev","onData","packets","done","total","encodePacket","byteLength","threshold","doClose","schema","b64","description","decodePacket","tryDecode","utf8","strict","map","ary","each","after","eachWithIndex","el","hasBinary","sliceBuffer","pong","message","noop","packetslist","utf8encode","encoded","String","utf8decode","asArray","Uint8Array","rest","encodePayload","setLengthHeader","encodeOne","doneCallback","isBinary","results","join","decodePayload","n","chr","ret","toJSON","arraybuffer","start","end","bytes","abv","ii","count","err_cb","proxy","bail","ucs2decode","string","value","extra","output","counter","charCodeAt","ucs2encode","array","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","fromCharCode","version","encodeURIComponent","qs","qry","pairs","split","pair","decodeURIComponent","a","constructor","alphabet","Math","floor","decoded","now","prev","seed","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","pop","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","list","concat","ms","factor","pow","rand","random","deviation"],"mappings":"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","file":"socket.io.slim.dev.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"io\"] = factory();\n\telse\n\t\troot[\"io\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar url = __webpack_require__(1);\n\tvar parser = __webpack_require__(4);\n\tvar Manager = __webpack_require__(9);\n\tvar debug = __webpack_require__(3)('socket.io-client');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = lookup;\n\t\n\t/**\n\t * Managers cache.\n\t */\n\t\n\tvar cache = exports.managers = {};\n\t\n\t/**\n\t * Looks up an existing `Manager` for multiplexing.\n\t * If the user summons:\n\t *\n\t *   `io('http://localhost/a');`\n\t *   `io('http://localhost/b');`\n\t *\n\t * We reuse the existing instance based on same scheme/port/host,\n\t * and we initialize sockets for each namespace.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction lookup(uri, opts) {\n\t  if (typeof uri === 'object') {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  var parsed = url(uri);\n\t  var source = parsed.source;\n\t  var id = parsed.id;\n\t  var path = parsed.path;\n\t  var sameNamespace = cache[id] && path in cache[id].nsps;\n\t  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n\t\n\t  var io;\n\t\n\t  if (newConnection) {\n\t\n\t    io = Manager(source, opts);\n\t  } else {\n\t    if (!cache[id]) {\n\t\n\t      cache[id] = Manager(source, opts);\n\t    }\n\t    io = cache[id];\n\t  }\n\t  if (parsed.query && !opts.query) {\n\t    opts.query = parsed.query;\n\t  }\n\t  return io.socket(parsed.path, opts);\n\t}\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = parser.protocol;\n\t\n\t/**\n\t * `connect`.\n\t *\n\t * @param {String} uri\n\t * @api public\n\t */\n\t\n\texports.connect = lookup;\n\t\n\t/**\n\t * Expose constructors for standalone build.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Manager = __webpack_require__(9);\n\texports.Socket = __webpack_require__(25);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parseuri = __webpack_require__(2);\n\tvar debug = __webpack_require__(3)('socket.io-client:url');\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = url;\n\t\n\t/**\n\t * URL parser.\n\t *\n\t * @param {String} url\n\t * @param {Object} An object meant to mimic window.location.\n\t *                 Defaults to window.location.\n\t * @api public\n\t */\n\t\n\tfunction url(uri, loc) {\n\t  var obj = uri;\n\t\n\t  // default to window.location\n\t  loc = loc || typeof location !== 'undefined' && location;\n\t  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\t\n\t  // relative path support\n\t  if ('string' === typeof uri) {\n\t    if ('/' === uri.charAt(0)) {\n\t      if ('/' === uri.charAt(1)) {\n\t        uri = loc.protocol + uri;\n\t      } else {\n\t        uri = loc.host + uri;\n\t      }\n\t    }\n\t\n\t    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\t\n\t      if ('undefined' !== typeof loc) {\n\t        uri = loc.protocol + '//' + uri;\n\t      } else {\n\t        uri = 'https://' + uri;\n\t      }\n\t    }\n\t\n\t    // parse\n\t\n\t    obj = parseuri(uri);\n\t  }\n\t\n\t  // make sure we treat `localhost:80` and `localhost` equally\n\t  if (!obj.port) {\n\t    if (/^(http|ws)$/.test(obj.protocol)) {\n\t      obj.port = '80';\n\t    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n\t      obj.port = '443';\n\t    }\n\t  }\n\t\n\t  obj.path = obj.path || '/';\n\t\n\t  var ipv6 = obj.host.indexOf(':') !== -1;\n\t  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\t\n\t  // define unique id\n\t  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n\t  // define href\n\t  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n\t\n\t  return obj;\n\t}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Parses an URI\r\n\t *\r\n\t * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n\t * @api private\r\n\t */\r\n\t\r\n\tvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\t\r\n\tvar parts = [\r\n\t    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n\t];\r\n\t\r\n\tmodule.exports = function parseuri(str) {\r\n\t    var src = str,\r\n\t        b = str.indexOf('['),\r\n\t        e = str.indexOf(']');\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n\t    }\r\n\t\r\n\t    var m = re.exec(str || ''),\r\n\t        uri = {},\r\n\t        i = 14;\r\n\t\r\n\t    while (i--) {\r\n\t        uri[parts[i]] = m[i] || '';\r\n\t    }\r\n\t\r\n\t    if (b != -1 && e != -1) {\r\n\t        uri.source = src;\r\n\t        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n\t        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n\t        uri.ipv6uri = true;\r\n\t    }\r\n\t\r\n\t    return uri;\r\n\t};\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function () {\n\t  return function () {};\n\t};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar debug = __webpack_require__(3)('socket.io-parser');\n\tvar Emitter = __webpack_require__(5);\n\tvar binary = __webpack_require__(6);\n\tvar isArray = __webpack_require__(7);\n\tvar isBuf = __webpack_require__(8);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\texports.protocol = 4;\n\t\n\t/**\n\t * Packet types.\n\t *\n\t * @api public\n\t */\n\t\n\texports.types = [\n\t  'CONNECT',\n\t  'DISCONNECT',\n\t  'EVENT',\n\t  'ACK',\n\t  'ERROR',\n\t  'BINARY_EVENT',\n\t  'BINARY_ACK'\n\t];\n\t\n\t/**\n\t * Packet type `connect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.CONNECT = 0;\n\t\n\t/**\n\t * Packet type `disconnect`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.DISCONNECT = 1;\n\t\n\t/**\n\t * Packet type `event`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.EVENT = 2;\n\t\n\t/**\n\t * Packet type `ack`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ACK = 3;\n\t\n\t/**\n\t * Packet type `error`.\n\t *\n\t * @api public\n\t */\n\t\n\texports.ERROR = 4;\n\t\n\t/**\n\t * Packet type 'binary event'\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_EVENT = 5;\n\t\n\t/**\n\t * Packet type `binary ack`. For acks with binary arguments.\n\t *\n\t * @api public\n\t */\n\t\n\texports.BINARY_ACK = 6;\n\t\n\t/**\n\t * Encoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Encoder = Encoder;\n\t\n\t/**\n\t * Decoder constructor.\n\t *\n\t * @api public\n\t */\n\t\n\texports.Decoder = Decoder;\n\t\n\t/**\n\t * A socket.io Encoder instance\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Encoder() {}\n\t\n\tvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\t\n\t/**\n\t * Encode a packet as a single string if non-binary, or as a\n\t * buffer sequence, depending on packet type.\n\t *\n\t * @param {Object} obj - packet object\n\t * @param {Function} callback - function to handle encodings (likely engine.write)\n\t * @return Calls callback with Array of encodings\n\t * @api public\n\t */\n\t\n\tEncoder.prototype.encode = function(obj, callback){\n\t\n\t\n\t  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n\t    encodeAsBinary(obj, callback);\n\t  } else {\n\t    var encoding = encodeAsString(obj);\n\t    callback([encoding]);\n\t  }\n\t};\n\t\n\t/**\n\t * Encode packet as string.\n\t *\n\t * @param {Object} packet\n\t * @return {String} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsString(obj) {\n\t\n\t  // first is type\n\t  var str = '' + obj.type;\n\t\n\t  // attachments if we have them\n\t  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n\t    str += obj.attachments + '-';\n\t  }\n\t\n\t  // if we have a namespace other than `/`\n\t  // we append it followed by a comma `,`\n\t  if (obj.nsp && '/' !== obj.nsp) {\n\t    str += obj.nsp + ',';\n\t  }\n\t\n\t  // immediately followed by the id\n\t  if (null != obj.id) {\n\t    str += obj.id;\n\t  }\n\t\n\t  // json data\n\t  if (null != obj.data) {\n\t    var payload = tryStringify(obj.data);\n\t    if (payload !== false) {\n\t      str += payload;\n\t    } else {\n\t      return ERROR_PACKET;\n\t    }\n\t  }\n\t\n\t\n\t  return str;\n\t}\n\t\n\tfunction tryStringify(str) {\n\t  try {\n\t    return JSON.stringify(str);\n\t  } catch(e){\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Encode packet as 'buffer sequence' by removing blobs, and\n\t * deconstructing packet into object with placeholders and\n\t * a list of buffers.\n\t *\n\t * @param {Object} packet\n\t * @return {Buffer} encoded\n\t * @api private\n\t */\n\t\n\tfunction encodeAsBinary(obj, callback) {\n\t\n\t  function writeEncoding(bloblessData) {\n\t    var deconstruction = binary.deconstructPacket(bloblessData);\n\t    var pack = encodeAsString(deconstruction.packet);\n\t    var buffers = deconstruction.buffers;\n\t\n\t    buffers.unshift(pack); // add packet info to beginning of data list\n\t    callback(buffers); // write all the buffers\n\t  }\n\t\n\t  binary.removeBlobs(obj, writeEncoding);\n\t}\n\t\n\t/**\n\t * A socket.io Decoder instance\n\t *\n\t * @return {Object} decoder\n\t * @api public\n\t */\n\t\n\tfunction Decoder() {\n\t  this.reconstructor = null;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter` with Decoder.\n\t */\n\t\n\tEmitter(Decoder.prototype);\n\t\n\t/**\n\t * Decodes an encoded packet string into packet JSON.\n\t *\n\t * @param {String} obj - encoded packet\n\t * @return {Object} packet\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.add = function(obj) {\n\t  var packet;\n\t  if (typeof obj === 'string') {\n\t    packet = decodeString(obj);\n\t    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n\t      this.reconstructor = new BinaryReconstructor(packet);\n\t\n\t      // no attachments, labeled binary but no binary data to follow\n\t      if (this.reconstructor.reconPack.attachments === 0) {\n\t        this.emit('decoded', packet);\n\t      }\n\t    } else { // non-binary full packet\n\t      this.emit('decoded', packet);\n\t    }\n\t  } else if (isBuf(obj) || obj.base64) { // raw binary data\n\t    if (!this.reconstructor) {\n\t      throw new Error('got binary data when not reconstructing a packet');\n\t    } else {\n\t      packet = this.reconstructor.takeBinaryData(obj);\n\t      if (packet) { // received final buffer\n\t        this.reconstructor = null;\n\t        this.emit('decoded', packet);\n\t      }\n\t    }\n\t  } else {\n\t    throw new Error('Unknown type: ' + obj);\n\t  }\n\t};\n\t\n\t/**\n\t * Decode a packet String (JSON data)\n\t *\n\t * @param {String} str\n\t * @return {Object} packet\n\t * @api private\n\t */\n\t\n\tfunction decodeString(str) {\n\t  var i = 0;\n\t  // look up type\n\t  var p = {\n\t    type: Number(str.charAt(0))\n\t  };\n\t\n\t  if (null == exports.types[p.type]) {\n\t    return error('unknown packet type ' + p.type);\n\t  }\n\t\n\t  // look up attachments if type binary\n\t  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n\t    var buf = '';\n\t    while (str.charAt(++i) !== '-') {\n\t      buf += str.charAt(i);\n\t      if (i == str.length) break;\n\t    }\n\t    if (buf != Number(buf) || str.charAt(i) !== '-') {\n\t      throw new Error('Illegal attachments');\n\t    }\n\t    p.attachments = Number(buf);\n\t  }\n\t\n\t  // look up namespace (if any)\n\t  if ('/' === str.charAt(i + 1)) {\n\t    p.nsp = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (',' === c) break;\n\t      p.nsp += c;\n\t      if (i === str.length) break;\n\t    }\n\t  } else {\n\t    p.nsp = '/';\n\t  }\n\t\n\t  // look up id\n\t  var next = str.charAt(i + 1);\n\t  if ('' !== next && Number(next) == next) {\n\t    p.id = '';\n\t    while (++i) {\n\t      var c = str.charAt(i);\n\t      if (null == c || Number(c) != c) {\n\t        --i;\n\t        break;\n\t      }\n\t      p.id += str.charAt(i);\n\t      if (i === str.length) break;\n\t    }\n\t    p.id = Number(p.id);\n\t  }\n\t\n\t  // look up json data\n\t  if (str.charAt(++i)) {\n\t    var payload = tryParse(str.substr(i));\n\t    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\t    if (isPayloadValid) {\n\t      p.data = payload;\n\t    } else {\n\t      return error('invalid payload');\n\t    }\n\t  }\n\t\n\t\n\t  return p;\n\t}\n\t\n\tfunction tryParse(str) {\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch(e){\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Deallocates a parser's resources\n\t *\n\t * @api public\n\t */\n\t\n\tDecoder.prototype.destroy = function() {\n\t  if (this.reconstructor) {\n\t    this.reconstructor.finishedReconstruction();\n\t  }\n\t};\n\t\n\t/**\n\t * A manager of a binary event's 'buffer sequence'. Should\n\t * be constructed whenever a packet of type BINARY_EVENT is\n\t * decoded.\n\t *\n\t * @param {Object} packet\n\t * @return {BinaryReconstructor} initialized reconstructor\n\t * @api private\n\t */\n\t\n\tfunction BinaryReconstructor(packet) {\n\t  this.reconPack = packet;\n\t  this.buffers = [];\n\t}\n\t\n\t/**\n\t * Method to be called when binary data received from connection\n\t * after a BINARY_EVENT packet.\n\t *\n\t * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n\t * @return {null | Object} returns null if more binary data is expected or\n\t *   a reconstructed packet object if all buffers have been received.\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n\t  this.buffers.push(binData);\n\t  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n\t    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n\t    this.finishedReconstruction();\n\t    return packet;\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Cleans up binary packet reconstruction variables.\n\t *\n\t * @api private\n\t */\n\t\n\tBinaryReconstructor.prototype.finishedReconstruction = function() {\n\t  this.reconPack = null;\n\t  this.buffers = [];\n\t};\n\t\n\tfunction error(msg) {\n\t  return {\n\t    type: exports.ERROR,\n\t    data: 'parser error: ' + msg\n\t  };\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\r\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\t\r\n\tif (true) {\r\n\t  module.exports = Emitter;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\t\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t};\r\n\t\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\t\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\t\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\t\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\t\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  var args = [].slice.call(arguments, 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\t\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return this;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\t\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\t\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t};\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/*global Blob,File*/\n\t\n\t/**\n\t * Module requirements\n\t */\n\t\n\tvar isArray = __webpack_require__(7);\n\tvar isBuf = __webpack_require__(8);\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\n\tvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\t\n\t/**\n\t * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n\t * Anything with blobs or files should be fed through removeBlobs before coming\n\t * here.\n\t *\n\t * @param {Object} packet - socket.io event packet\n\t * @return {Object} with deconstructed packet and list of buffers\n\t * @api public\n\t */\n\t\n\texports.deconstructPacket = function(packet) {\n\t  var buffers = [];\n\t  var packetData = packet.data;\n\t  var pack = packet;\n\t  pack.data = _deconstructPacket(packetData, buffers);\n\t  pack.attachments = buffers.length; // number of binary 'attachments'\n\t  return {packet: pack, buffers: buffers};\n\t};\n\t\n\tfunction _deconstructPacket(data, buffers) {\n\t  if (!data) return data;\n\t\n\t  if (isBuf(data)) {\n\t    var placeholder = { _placeholder: true, num: buffers.length };\n\t    buffers.push(data);\n\t    return placeholder;\n\t  } else if (isArray(data)) {\n\t    var newData = new Array(data.length);\n\t    for (var i = 0; i < data.length; i++) {\n\t      newData[i] = _deconstructPacket(data[i], buffers);\n\t    }\n\t    return newData;\n\t  } else if (typeof data === 'object' && !(data instanceof Date)) {\n\t    var newData = {};\n\t    for (var key in data) {\n\t      newData[key] = _deconstructPacket(data[key], buffers);\n\t    }\n\t    return newData;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Reconstructs a binary packet from its placeholder packet and buffers\n\t *\n\t * @param {Object} packet - event packet with placeholders\n\t * @param {Array} buffers - binary buffers to put in placeholder positions\n\t * @return {Object} reconstructed packet\n\t * @api public\n\t */\n\t\n\texports.reconstructPacket = function(packet, buffers) {\n\t  packet.data = _reconstructPacket(packet.data, buffers);\n\t  packet.attachments = undefined; // no longer useful\n\t  return packet;\n\t};\n\t\n\tfunction _reconstructPacket(data, buffers) {\n\t  if (!data) return data;\n\t\n\t  if (data && data._placeholder) {\n\t    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n\t  } else if (isArray(data)) {\n\t    for (var i = 0; i < data.length; i++) {\n\t      data[i] = _reconstructPacket(data[i], buffers);\n\t    }\n\t  } else if (typeof data === 'object') {\n\t    for (var key in data) {\n\t      data[key] = _reconstructPacket(data[key], buffers);\n\t    }\n\t  }\n\t\n\t  return data;\n\t}\n\t\n\t/**\n\t * Asynchronously removes Blobs or Files from data via\n\t * FileReader's readAsArrayBuffer method. Used before encoding\n\t * data as msgpack. Calls callback with the blobless data.\n\t *\n\t * @param {Object} data\n\t * @param {Function} callback\n\t * @api private\n\t */\n\t\n\texports.removeBlobs = function(data, callback) {\n\t  function _removeBlobs(obj, curKey, containingObject) {\n\t    if (!obj) return obj;\n\t\n\t    // convert any blob\n\t    if ((withNativeBlob && obj instanceof Blob) ||\n\t        (withNativeFile && obj instanceof File)) {\n\t      pendingBlobs++;\n\t\n\t      // async filereader\n\t      var fileReader = new FileReader();\n\t      fileReader.onload = function() { // this.result == arraybuffer\n\t        if (containingObject) {\n\t          containingObject[curKey] = this.result;\n\t        }\n\t        else {\n\t          bloblessData = this.result;\n\t        }\n\t\n\t        // if nothing pending its callback time\n\t        if(! --pendingBlobs) {\n\t          callback(bloblessData);\n\t        }\n\t      };\n\t\n\t      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n\t    } else if (isArray(obj)) { // handle array\n\t      for (var i = 0; i < obj.length; i++) {\n\t        _removeBlobs(obj[i], i, obj);\n\t      }\n\t    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n\t      for (var key in obj) {\n\t        _removeBlobs(obj[key], key, obj);\n\t      }\n\t    }\n\t  }\n\t\n\t  var pendingBlobs = 0;\n\t  var bloblessData = data;\n\t  _removeBlobs(bloblessData);\n\t  if (!pendingBlobs) {\n\t    callback(bloblessData);\n\t  }\n\t};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = Array.isArray || function (arr) {\n\t  return toString.call(arr) == '[object Array]';\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = isBuf;\n\t\n\tvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\n\tvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\t\n\tvar isView = function (obj) {\n\t  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n\t};\n\t\n\t/**\n\t * Returns true if obj is a buffer or an arraybuffer.\n\t *\n\t * @api private\n\t */\n\t\n\tfunction isBuf(obj) {\n\t  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n\t          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n\t}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar eio = __webpack_require__(10);\n\tvar Socket = __webpack_require__(25);\n\tvar Emitter = __webpack_require__(5);\n\tvar parser = __webpack_require__(4);\n\tvar on = __webpack_require__(27);\n\tvar bind = __webpack_require__(28);\n\tvar Backoff = __webpack_require__(29);\n\t\n\t/**\n\t * IE6+ hasOwnProperty\n\t */\n\t\n\tvar has = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * Module exports\n\t */\n\t\n\tmodule.exports = Manager;\n\t\n\t/**\n\t * `Manager` constructor.\n\t *\n\t * @param {String} engine instance or engine uri/opts\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Manager(uri, opts) {\n\t  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\t  if (uri && 'object' === typeof uri) {\n\t    opts = uri;\n\t    uri = undefined;\n\t  }\n\t  opts = opts || {};\n\t\n\t  opts.path = opts.path || '/socket.io';\n\t  this.nsps = {};\n\t  this.subs = [];\n\t  this.opts = opts;\n\t  this.reconnection(opts.reconnection !== false);\n\t  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n\t  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n\t  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n\t  this.randomizationFactor(opts.randomizationFactor || 0.5);\n\t  this.backoff = new Backoff({\n\t    min: this.reconnectionDelay(),\n\t    max: this.reconnectionDelayMax(),\n\t    jitter: this.randomizationFactor()\n\t  });\n\t  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n\t  this.readyState = 'closed';\n\t  this.uri = uri;\n\t  this.connecting = [];\n\t  this.lastPing = null;\n\t  this.encoding = false;\n\t  this.packetBuffer = [];\n\t  var _parser = opts.parser || parser;\n\t  this.encoder = new _parser.Encoder();\n\t  this.decoder = new _parser.Decoder();\n\t  this.autoConnect = opts.autoConnect !== false;\n\t  if (this.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Propagate given event to sockets and emit on `this`\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.emitAll = function () {\n\t  this.emit.apply(this, arguments);\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Update `socket.id` of all sockets\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.updateSocketIds = function () {\n\t  for (var nsp in this.nsps) {\n\t    if (has.call(this.nsps, nsp)) {\n\t      this.nsps[nsp].id = this.generateId(nsp);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * generate `socket.id` for the given `nsp`\n\t *\n\t * @param {String} nsp\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tManager.prototype.generateId = function (nsp) {\n\t  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n\t};\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Manager.prototype);\n\t\n\t/**\n\t * Sets the `reconnection` config.\n\t *\n\t * @param {Boolean} true/false if it should automatically reconnect\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnection = function (v) {\n\t  if (!arguments.length) return this._reconnection;\n\t  this._reconnection = !!v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the reconnection attempts config.\n\t *\n\t * @param {Number} max reconnection attempts before giving up\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionAttempts = function (v) {\n\t  if (!arguments.length) return this._reconnectionAttempts;\n\t  this._reconnectionAttempts = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelay = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelay;\n\t  this._reconnectionDelay = v;\n\t  this.backoff && this.backoff.setMin(v);\n\t  return this;\n\t};\n\t\n\tManager.prototype.randomizationFactor = function (v) {\n\t  if (!arguments.length) return this._randomizationFactor;\n\t  this._randomizationFactor = v;\n\t  this.backoff && this.backoff.setJitter(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the maximum delay between reconnections.\n\t *\n\t * @param {Number} delay\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.reconnectionDelayMax = function (v) {\n\t  if (!arguments.length) return this._reconnectionDelayMax;\n\t  this._reconnectionDelayMax = v;\n\t  this.backoff && this.backoff.setMax(v);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the connection timeout. `false` to disable\n\t *\n\t * @return {Manager} self or value\n\t * @api public\n\t */\n\t\n\tManager.prototype.timeout = function (v) {\n\t  if (!arguments.length) return this._timeout;\n\t  this._timeout = v;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Starts trying to reconnect if reconnection is enabled and we have not\n\t * started reconnecting yet\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.maybeReconnectOnOpen = function () {\n\t  // Only try to reconnect if it's the first time we're connecting\n\t  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n\t    // keeps reconnection from firing twice for the same reconnection loop\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Sets the current transport `socket`.\n\t *\n\t * @param {Function} optional, callback\n\t * @return {Manager} self\n\t * @api public\n\t */\n\t\n\tManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n\t  if (~this.readyState.indexOf('open')) return this;\n\t\n\t  this.engine = eio(this.uri, this.opts);\n\t  var socket = this.engine;\n\t  var self = this;\n\t  this.readyState = 'opening';\n\t  this.skipReconnect = false;\n\t\n\t  // emit `open`\n\t  var openSub = on(socket, 'open', function () {\n\t    self.onopen();\n\t    fn && fn();\n\t  });\n\t\n\t  // emit `connect_error`\n\t  var errorSub = on(socket, 'error', function (data) {\n\t    self.cleanup();\n\t    self.readyState = 'closed';\n\t    self.emitAll('connect_error', data);\n\t    if (fn) {\n\t      var err = new Error('Connection error');\n\t      err.data = data;\n\t      fn(err);\n\t    } else {\n\t      // Only do this if there is no fn to handle the error\n\t      self.maybeReconnectOnOpen();\n\t    }\n\t  });\n\t\n\t  // emit `connect_timeout`\n\t  if (false !== this._timeout) {\n\t    var timeout = this._timeout;\n\t\n\t    // set timer\n\t    var timer = setTimeout(function () {\n\t      openSub.destroy();\n\t      socket.close();\n\t      socket.emit('error', 'timeout');\n\t      self.emitAll('connect_timeout', timeout);\n\t    }, timeout);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t\n\t  this.subs.push(openSub);\n\t  this.subs.push(errorSub);\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport open.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onopen = function () {\n\t  // clear old subs\n\t  this.cleanup();\n\t\n\t  // mark as open\n\t  this.readyState = 'open';\n\t  this.emit('open');\n\t\n\t  // add new subs\n\t  var socket = this.engine;\n\t  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n\t  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n\t  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n\t  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n\t  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n\t  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n\t};\n\t\n\t/**\n\t * Called upon a ping.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onping = function () {\n\t  this.lastPing = new Date();\n\t  this.emitAll('ping');\n\t};\n\t\n\t/**\n\t * Called upon a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onpong = function () {\n\t  this.emitAll('pong', new Date() - this.lastPing);\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondata = function (data) {\n\t  this.decoder.add(data);\n\t};\n\t\n\t/**\n\t * Called when parser fully decodes a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.ondecoded = function (packet) {\n\t  this.emit('packet', packet);\n\t};\n\t\n\t/**\n\t * Called upon socket error.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onerror = function (err) {\n\t  this.emitAll('error', err);\n\t};\n\t\n\t/**\n\t * Creates a new socket for the given `nsp`.\n\t *\n\t * @return {Socket}\n\t * @api public\n\t */\n\t\n\tManager.prototype.socket = function (nsp, opts) {\n\t  var socket = this.nsps[nsp];\n\t  if (!socket) {\n\t    socket = new Socket(this, nsp, opts);\n\t    this.nsps[nsp] = socket;\n\t    var self = this;\n\t    socket.on('connecting', onConnecting);\n\t    socket.on('connect', function () {\n\t      socket.id = self.generateId(nsp);\n\t    });\n\t\n\t    if (this.autoConnect) {\n\t      // manually call here since connecting event is fired before listening\n\t      onConnecting();\n\t    }\n\t  }\n\t\n\t  function onConnecting() {\n\t    if (!~self.connecting.indexOf(socket)) {\n\t      self.connecting.push(socket);\n\t    }\n\t  }\n\t\n\t  return socket;\n\t};\n\t\n\t/**\n\t * Called upon a socket close.\n\t *\n\t * @param {Socket} socket\n\t */\n\t\n\tManager.prototype.destroy = function (socket) {\n\t  var index = this.connecting.indexOf(socket);\n\t  if (~index) this.connecting.splice(index, 1);\n\t  if (this.connecting.length) return;\n\t\n\t  this.close();\n\t};\n\t\n\t/**\n\t * Writes a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tManager.prototype.packet = function (packet) {\n\t  var self = this;\n\t  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\t\n\t  if (!self.encoding) {\n\t    // encode, then write to engine with result\n\t    self.encoding = true;\n\t    this.encoder.encode(packet, function (encodedPackets) {\n\t      for (var i = 0; i < encodedPackets.length; i++) {\n\t        self.engine.write(encodedPackets[i], packet.options);\n\t      }\n\t      self.encoding = false;\n\t      self.processPacketQueue();\n\t    });\n\t  } else {\n\t    // add packet to the queue\n\t    self.packetBuffer.push(packet);\n\t  }\n\t};\n\t\n\t/**\n\t * If packet buffer is non-empty, begins encoding the\n\t * next packet in line.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.processPacketQueue = function () {\n\t  if (this.packetBuffer.length > 0 && !this.encoding) {\n\t    var pack = this.packetBuffer.shift();\n\t    this.packet(pack);\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up transport subscriptions and packet buffer.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.cleanup = function () {\n\t  var subsLength = this.subs.length;\n\t  for (var i = 0; i < subsLength; i++) {\n\t    var sub = this.subs.shift();\n\t    sub.destroy();\n\t  }\n\t\n\t  this.packetBuffer = [];\n\t  this.encoding = false;\n\t  this.lastPing = null;\n\t\n\t  this.decoder.destroy();\n\t};\n\t\n\t/**\n\t * Close the current socket.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.close = Manager.prototype.disconnect = function () {\n\t  this.skipReconnect = true;\n\t  this.reconnecting = false;\n\t  if ('opening' === this.readyState) {\n\t    // `onclose` will not fire because\n\t    // an open event never happened\n\t    this.cleanup();\n\t  }\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  if (this.engine) this.engine.close();\n\t};\n\t\n\t/**\n\t * Called upon engine close.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onclose = function (reason) {\n\t  this.cleanup();\n\t  this.backoff.reset();\n\t  this.readyState = 'closed';\n\t  this.emit('close', reason);\n\t\n\t  if (this._reconnection && !this.skipReconnect) {\n\t    this.reconnect();\n\t  }\n\t};\n\t\n\t/**\n\t * Attempt a reconnection.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.reconnect = function () {\n\t  if (this.reconnecting || this.skipReconnect) return this;\n\t\n\t  var self = this;\n\t\n\t  if (this.backoff.attempts >= this._reconnectionAttempts) {\n\t    this.backoff.reset();\n\t    this.emitAll('reconnect_failed');\n\t    this.reconnecting = false;\n\t  } else {\n\t    var delay = this.backoff.duration();\n\t\n\t    this.reconnecting = true;\n\t    var timer = setTimeout(function () {\n\t      if (self.skipReconnect) return;\n\t\n\t      self.emitAll('reconnect_attempt', self.backoff.attempts);\n\t      self.emitAll('reconnecting', self.backoff.attempts);\n\t\n\t      // check again for the case socket closed in above events\n\t      if (self.skipReconnect) return;\n\t\n\t      self.open(function (err) {\n\t        if (err) {\n\t          self.reconnecting = false;\n\t          self.reconnect();\n\t          self.emitAll('reconnect_error', err.data);\n\t        } else {\n\t          self.onreconnect();\n\t        }\n\t      });\n\t    }, delay);\n\t\n\t    this.subs.push({\n\t      destroy: function () {\n\t        clearTimeout(timer);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon successful reconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tManager.prototype.onreconnect = function () {\n\t  var attempt = this.backoff.attempts;\n\t  this.reconnecting = false;\n\t  this.backoff.reset();\n\t  this.updateSocketIds();\n\t  this.emitAll('reconnect', attempt);\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(11);\n\t\n\t/**\n\t * Exports parser\n\t *\n\t * @api public\n\t *\n\t */\n\tmodule.exports.parser = __webpack_require__(15);\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar transports = __webpack_require__(12);\n\tvar Emitter = __webpack_require__(5);\n\tvar parser = __webpack_require__(15);\n\tvar parseuri = __webpack_require__(2);\n\tvar parseqs = __webpack_require__(21);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Socket;\n\t\n\t/**\n\t * Socket constructor.\n\t *\n\t * @param {String|Object} uri or options\n\t * @param {Object} options\n\t * @api public\n\t */\n\t\n\tfunction Socket (uri, opts) {\n\t  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\t\n\t  opts = opts || {};\n\t\n\t  if (uri && 'object' === typeof uri) {\n\t    opts = uri;\n\t    uri = null;\n\t  }\n\t\n\t  if (uri) {\n\t    uri = parseuri(uri);\n\t    opts.hostname = uri.host;\n\t    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n\t    opts.port = uri.port;\n\t    if (uri.query) opts.query = uri.query;\n\t  } else if (opts.host) {\n\t    opts.hostname = parseuri(opts.host).host;\n\t  }\n\t\n\t  this.secure =\n\t    null != opts.secure\n\t      ? opts.secure\n\t      : typeof location !== 'undefined' && 'https:' === location.protocol;\n\t\n\t  if (opts.hostname && !opts.port) {\n\t    // if no port is specified manually, use the protocol default\n\t    opts.port = this.secure ? '443' : '80';\n\t  }\n\t\n\t  this.hostname =\n\t    opts.hostname ||\n\t    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n\t  this.port =\n\t    opts.port ||\n\t    (typeof location !== 'undefined' && location.port\n\t      ? location.port\n\t      : this.secure\n\t      ? 443\n\t      : 80);\n\t  this.query = opts.query || {};\n\t  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n\t  this.upgrade = false !== opts.upgrade;\n\t  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n\t  this.forceJSONP = !!opts.forceJSONP;\n\t  this.jsonp = false !== opts.jsonp;\n\t  this.forceBase64 = !!opts.forceBase64;\n\t  this.enablesXDR = !!opts.enablesXDR;\n\t  this.withCredentials = false !== opts.withCredentials;\n\t  this.timestampParam = opts.timestampParam || 't';\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.transports = opts.transports || ['websocket'];\n\t  this.transportOptions = opts.transportOptions || {};\n\t  this.readyState = '';\n\t  this.writeBuffer = [];\n\t  this.prevBufferLen = 0;\n\t  this.policyPort = opts.policyPort || 843;\n\t  this.rememberUpgrade = opts.rememberUpgrade || false;\n\t  this.binaryType = null;\n\t  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\t\n\t  this.ca = opts.ca || null;\n\t  this.forceNode = !!opts.forceNode;\n\t\n\t  // detect ReactNative environment\n\t  this.isReactNative =\n\t    typeof navigator !== 'undefined' &&\n\t    typeof navigator.product === 'string' &&\n\t    navigator.product.toLowerCase() === 'reactnative';\n\t\n\t  // other options for Node.js or ReactNative client\n\t  if (typeof self === 'undefined' || this.isReactNative) {\n\t    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n\t      this.extraHeaders = opts.extraHeaders;\n\t    }\n\t\n\t    if (opts.localAddress) {\n\t      this.localAddress = opts.localAddress;\n\t    }\n\t  }\n\t\n\t  // set on handshake\n\t  this.id = null;\n\t  this.upgrades = null;\n\t  this.pingInterval = null;\n\t  this.pingTimeout = null;\n\t\n\t  // set on heartbeat\n\t  this.pingIntervalTimer = null;\n\t  this.pingTimeoutTimer = null;\n\t\n\t  this.open();\n\t}\n\t\n\tSocket.priorWebsocketSuccess = false;\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Protocol version.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.protocol = parser.protocol; // this is an int\n\t\n\t/**\n\t * Expose deps for legacy compatibility\n\t * and standalone browser access.\n\t */\n\t\n\tSocket.Socket = Socket;\n\tSocket.Transport = __webpack_require__(14);\n\tSocket.transports = __webpack_require__(12);\n\tSocket.parser = __webpack_require__(15);\n\t\n\t/**\n\t * Creates transport of the given type.\n\t *\n\t * @param {String} transport name\n\t * @return {Transport}\n\t * @api private\n\t */\n\t\n\tSocket.prototype.createTransport = function (name) {\n\t  var query = clone(this.query);\n\t\n\t  // append engine.io protocol identifier\n\t  query.EIO = parser.protocol;\n\t\n\t  // transport name\n\t  query.transport = name;\n\t\n\t  // per-transport options\n\t  var options = this.transportOptions[name] || {};\n\t\n\t  // session id if we already have one\n\t  if (this.id) query.sid = this.id;\n\t\n\t  var transport = new transports[name]({\n\t    query: query,\n\t    socket: this,\n\t    hostname: options.hostname || this.hostname,\n\t    port: options.port || this.port,\n\t    secure: options.secure || this.secure,\n\t    path: options.path || this.path,\n\t    forceJSONP: options.forceJSONP || this.forceJSONP,\n\t    jsonp: options.jsonp || this.jsonp,\n\t    forceBase64: options.forceBase64 || this.forceBase64,\n\t    enablesXDR: options.enablesXDR || this.enablesXDR,\n\t    withCredentials: options.withCredentials || this.withCredentials,\n\t    timestampRequests: options.timestampRequests || this.timestampRequests,\n\t    timestampParam: options.timestampParam || this.timestampParam,\n\t    policyPort: options.policyPort || this.policyPort,\n\t    extraHeaders: options.extraHeaders || this.extraHeaders,\n\t    forceNode: options.forceNode || this.forceNode,\n\t    localAddress: options.localAddress || this.localAddress,\n\t    requestTimeout: options.requestTimeout || this.requestTimeout,\n\t    protocols: options.protocols || void 0,\n\t    isReactNative: this.isReactNative\n\t  });\n\t\n\t  return transport;\n\t};\n\t\n\tfunction clone (obj) {\n\t  var o = {};\n\t  for (var i in obj) {\n\t    if (obj.hasOwnProperty(i)) {\n\t      o[i] = obj[i];\n\t    }\n\t  }\n\t  return o;\n\t}\n\t\n\t/**\n\t * Initializes transport to use and starts probe.\n\t *\n\t * @api private\n\t */\n\tSocket.prototype.open = function () {\n\t  var transport;\n\t  if (\n\t    this.rememberUpgrade &&\n\t    Socket.priorWebsocketSuccess &&\n\t    this.transports.indexOf('websocket') !== -1\n\t  ) {\n\t    transport = 'websocket';\n\t  } else if (0 === this.transports.length) {\n\t    // Emit error on next tick so it can be listened to\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.emit('error', 'No transports available');\n\t    }, 0);\n\t    return;\n\t  } else {\n\t    transport = this.transports[0];\n\t  }\n\t  this.readyState = 'opening';\n\t\n\t  // Retry with the next transport if the transport is disabled (jsonp: false)\n\t  try {\n\t    transport = this.createTransport(transport);\n\t  } catch (e) {\n\t    this.transports.shift();\n\t    this.open();\n\t    return;\n\t  }\n\t\n\t  transport.open();\n\t  this.setTransport(transport);\n\t};\n\t\n\t/**\n\t * Sets the current transport. Disables the existing one (if any).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setTransport = function (transport) {\n\t  var self = this;\n\t\n\t  if (this.transport) {\n\t    this.transport.removeAllListeners();\n\t  }\n\t\n\t  // set up transport\n\t  this.transport = transport;\n\t\n\t  // set up transport listeners\n\t  transport\n\t    .on('drain', function () {\n\t      self.onDrain();\n\t    })\n\t    .on('packet', function (packet) {\n\t      self.onPacket(packet);\n\t    })\n\t    .on('error', function (e) {\n\t      self.onError(e);\n\t    })\n\t    .on('close', function () {\n\t      self.onClose('transport close');\n\t    });\n\t};\n\t\n\t/**\n\t * Probes a transport.\n\t *\n\t * @param {String} transport name\n\t * @api private\n\t */\n\t\n\tSocket.prototype.probe = function (name) {\n\t  var transport = this.createTransport(name, { probe: 1 });\n\t  var failed = false;\n\t  var self = this;\n\t\n\t  Socket.priorWebsocketSuccess = false;\n\t\n\t  function onTransportOpen () {\n\t    if (self.onlyBinaryUpgrades) {\n\t      var upgradeLosesBinary =\n\t        !this.supportsBinary && self.transport.supportsBinary;\n\t      failed = failed || upgradeLosesBinary;\n\t    }\n\t    if (failed) return;\n\t\n\t    transport.send([{ type: 'ping', data: 'probe' }]);\n\t    transport.once('packet', function (msg) {\n\t      if (failed) return;\n\t      if ('pong' === msg.type && 'probe' === msg.data) {\n\t        self.upgrading = true;\n\t        self.emit('upgrading', transport);\n\t        if (!transport) return;\n\t        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\t\n\t        self.transport.pause(function () {\n\t          if (failed) return;\n\t          if ('closed' === self.readyState) return;\n\t\n\t          cleanup();\n\t\n\t          self.setTransport(transport);\n\t          transport.send([{ type: 'upgrade' }]);\n\t          self.emit('upgrade', transport);\n\t          transport = null;\n\t          self.upgrading = false;\n\t          self.flush();\n\t        });\n\t      } else {\n\t        var err = new Error('probe error');\n\t        err.transport = transport.name;\n\t        self.emit('upgradeError', err);\n\t      }\n\t    });\n\t  }\n\t\n\t  function freezeTransport () {\n\t    if (failed) return;\n\t\n\t    // Any callback called by transport should be ignored since now\n\t    failed = true;\n\t\n\t    cleanup();\n\t\n\t    transport.close();\n\t    transport = null;\n\t  }\n\t\n\t  // Handle any error that happens while probing\n\t  function onerror (err) {\n\t    var error = new Error('probe error: ' + err);\n\t    error.transport = transport.name;\n\t\n\t    freezeTransport();\n\t\n\t    self.emit('upgradeError', error);\n\t  }\n\t\n\t  function onTransportClose () {\n\t    onerror('transport closed');\n\t  }\n\t\n\t  // When the socket is closed while we're probing\n\t  function onclose () {\n\t    onerror('socket closed');\n\t  }\n\t\n\t  // When the socket is upgraded while we're probing\n\t  function onupgrade (to) {\n\t    if (transport && to.name !== transport.name) {\n\t      freezeTransport();\n\t    }\n\t  }\n\t\n\t  // Remove all listeners on the transport and on self\n\t  function cleanup () {\n\t    transport.removeListener('open', onTransportOpen);\n\t    transport.removeListener('error', onerror);\n\t    transport.removeListener('close', onTransportClose);\n\t    self.removeListener('close', onclose);\n\t    self.removeListener('upgrading', onupgrade);\n\t  }\n\t\n\t  transport.once('open', onTransportOpen);\n\t  transport.once('error', onerror);\n\t  transport.once('close', onTransportClose);\n\t\n\t  this.once('close', onclose);\n\t  this.once('upgrading', onupgrade);\n\t\n\t  transport.open();\n\t};\n\t\n\t/**\n\t * Called when connection is deemed open.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.onOpen = function () {\n\t  this.readyState = 'open';\n\t  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n\t  this.emit('open');\n\t  this.flush();\n\t\n\t  // we check for `readyState` in case an `open`\n\t  // listener already closed the socket\n\t  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n\t    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n\t      this.probe(this.upgrades[i]);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Handles a packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onPacket = function (packet) {\n\t  if (\n\t    'opening' === this.readyState ||\n\t    'open' === this.readyState ||\n\t    'closing' === this.readyState\n\t  ) {\n\t    this.emit('packet', packet);\n\t\n\t    // Socket is live - any packet counts\n\t    this.emit('heartbeat');\n\t\n\t    switch (packet.type) {\n\t      case 'open':\n\t        this.onHandshake(JSON.parse(packet.data));\n\t        break;\n\t\n\t      case 'pong':\n\t        this.setPing();\n\t        this.emit('pong');\n\t        break;\n\t\n\t      case 'error':\n\t        var err = new Error('server error');\n\t        err.code = packet.data;\n\t        this.onError(err);\n\t        break;\n\t\n\t      case 'message':\n\t        this.emit('data', packet.data);\n\t        this.emit('message', packet.data);\n\t        break;\n\t    }\n\t  } else {\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon handshake completion.\n\t *\n\t * @param {Object} handshake obj\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHandshake = function (data) {\n\t  this.emit('handshake', data);\n\t  this.id = data.sid;\n\t  this.transport.query.sid = data.sid;\n\t  this.upgrades = this.filterUpgrades(data.upgrades);\n\t  this.pingInterval = data.pingInterval;\n\t  this.pingTimeout = data.pingTimeout;\n\t  this.onOpen();\n\t  // In case open handler closes socket\n\t  if ('closed' === this.readyState) return;\n\t  this.setPing();\n\t\n\t  // Prolong liveness of socket on heartbeat\n\t  this.removeListener('heartbeat', this.onHeartbeat);\n\t  this.on('heartbeat', this.onHeartbeat);\n\t};\n\t\n\t/**\n\t * Resets ping timeout.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onHeartbeat = function (timeout) {\n\t  clearTimeout(this.pingTimeoutTimer);\n\t  var self = this;\n\t  self.pingTimeoutTimer = setTimeout(function () {\n\t    if ('closed' === self.readyState) return;\n\t    self.onClose('ping timeout');\n\t  }, timeout || self.pingInterval + self.pingTimeout);\n\t};\n\t\n\t/**\n\t * Pings server every `this.pingInterval` and expects response\n\t * within `this.pingTimeout` or closes connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.setPing = function () {\n\t  var self = this;\n\t  clearTimeout(self.pingIntervalTimer);\n\t  self.pingIntervalTimer = setTimeout(function () {\n\t    self.ping();\n\t    self.onHeartbeat(self.pingTimeout);\n\t  }, self.pingInterval);\n\t};\n\t\n\t/**\n\t * Sends a ping packet.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ping = function () {\n\t  var self = this;\n\t  this.sendPacket('ping', function () {\n\t    self.emit('ping');\n\t  });\n\t};\n\t\n\t/**\n\t * Called on `drain` event\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onDrain = function () {\n\t  this.writeBuffer.splice(0, this.prevBufferLen);\n\t\n\t  // setting prevBufferLen = 0 is very important\n\t  // for example, when upgrading, upgrade packet is sent over,\n\t  // and a nonzero prevBufferLen could cause problems on `drain`\n\t  this.prevBufferLen = 0;\n\t\n\t  if (0 === this.writeBuffer.length) {\n\t    this.emit('drain');\n\t  } else {\n\t    this.flush();\n\t  }\n\t};\n\t\n\t/**\n\t * Flush write buffers.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.flush = function () {\n\t  if (\n\t    'closed' !== this.readyState &&\n\t    this.transport.writable &&\n\t    !this.upgrading &&\n\t    this.writeBuffer.length\n\t  ) {\n\t    this.transport.send(this.writeBuffer);\n\t    // keep track of current length of writeBuffer\n\t    // splice writeBuffer and callbackBuffer on `drain`\n\t    this.prevBufferLen = this.writeBuffer.length;\n\t    this.emit('flush');\n\t  }\n\t};\n\t\n\t/**\n\t * Sends a message.\n\t *\n\t * @param {String} message.\n\t * @param {Function} callback function.\n\t * @param {Object} options.\n\t * @return {Socket} for chaining.\n\t * @api public\n\t */\n\t\n\tSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n\t  this.sendPacket('message', msg, options, fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {String} packet type.\n\t * @param {String} data.\n\t * @param {Object} options.\n\t * @param {Function} callback function.\n\t * @api private\n\t */\n\t\n\tSocket.prototype.sendPacket = function (type, data, options, fn) {\n\t  if ('function' === typeof data) {\n\t    fn = data;\n\t    data = undefined;\n\t  }\n\t\n\t  if ('function' === typeof options) {\n\t    fn = options;\n\t    options = null;\n\t  }\n\t\n\t  if ('closing' === this.readyState || 'closed' === this.readyState) {\n\t    return;\n\t  }\n\t\n\t  options = options || {};\n\t  options.compress = false !== options.compress;\n\t\n\t  var packet = {\n\t    type: type,\n\t    data: data,\n\t    options: options\n\t  };\n\t  this.emit('packetCreate', packet);\n\t  this.writeBuffer.push(packet);\n\t  if (fn) this.once('flush', fn);\n\t  this.flush();\n\t};\n\t\n\t/**\n\t * Closes the connection.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.close = function () {\n\t  if ('opening' === this.readyState || 'open' === this.readyState) {\n\t    this.readyState = 'closing';\n\t\n\t    var self = this;\n\t\n\t    if (this.writeBuffer.length) {\n\t      this.once('drain', function () {\n\t        if (this.upgrading) {\n\t          waitForUpgrade();\n\t        } else {\n\t          close();\n\t        }\n\t      });\n\t    } else if (this.upgrading) {\n\t      waitForUpgrade();\n\t    } else {\n\t      close();\n\t    }\n\t  }\n\t\n\t  function close () {\n\t    self.onClose('forced close');\n\t    self.transport.close();\n\t  }\n\t\n\t  function cleanupAndClose () {\n\t    self.removeListener('upgrade', cleanupAndClose);\n\t    self.removeListener('upgradeError', cleanupAndClose);\n\t    close();\n\t  }\n\t\n\t  function waitForUpgrade () {\n\t    // wait for upgrade to finish since we can't send packets while pausing a transport\n\t    self.once('upgrade', cleanupAndClose);\n\t    self.once('upgradeError', cleanupAndClose);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Called upon transport error\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onError = function (err) {\n\t  Socket.priorWebsocketSuccess = false;\n\t  this.emit('error', err);\n\t  this.onClose('transport error', err);\n\t};\n\t\n\t/**\n\t * Called upon transport close.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onClose = function (reason, desc) {\n\t  if (\n\t    'opening' === this.readyState ||\n\t    'open' === this.readyState ||\n\t    'closing' === this.readyState\n\t  ) {\n\t    var self = this;\n\t\n\t    // clear timers\n\t    clearTimeout(this.pingIntervalTimer);\n\t    clearTimeout(this.pingTimeoutTimer);\n\t\n\t    // stop event from firing again for transport\n\t    this.transport.removeAllListeners('close');\n\t\n\t    // ensure transport won't stay open\n\t    this.transport.close();\n\t\n\t    // ignore further transport communication\n\t    this.transport.removeAllListeners();\n\t\n\t    // set ready state\n\t    this.readyState = 'closed';\n\t\n\t    // clear session id\n\t    this.id = null;\n\t\n\t    // emit close event\n\t    this.emit('close', reason, desc);\n\t\n\t    // clean buffers after, so users can still\n\t    // grab the buffers on `close` event\n\t    self.writeBuffer = [];\n\t    self.prevBufferLen = 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Filters upgrades, returning only those matching client transports.\n\t *\n\t * @param {Array} server upgrades\n\t * @api private\n\t *\n\t */\n\t\n\tSocket.prototype.filterUpgrades = function (upgrades) {\n\t  var filteredUpgrades = [];\n\t  for (var i = 0, j = upgrades.length; i < j; i++) {\n\t    if (~this.transports.indexOf(upgrades[i]))\n\t      filteredUpgrades.push(upgrades[i]);\n\t  }\n\t  return filteredUpgrades;\n\t};\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies\n\t */\n\t\n\tvar websocket = __webpack_require__(13);\n\t\n\t/**\n\t * Export transports.\n\t */\n\t\n\texports.websocket = websocket;\n\t\n\t/**\n\t * Polling transport polymorphic constructor.\n\t * Decides on xhr vs jsonp based on feature detection.\n\t *\n\t * @api private\n\t */\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Transport = __webpack_require__(14);\n\tvar parser = __webpack_require__(15);\n\tvar parseqs = __webpack_require__(21);\n\tvar inherit = __webpack_require__(22);\n\tvar yeast = __webpack_require__(23);\n\t\n\tvar BrowserWebSocket, NodeWebSocket;\n\t\n\tif (typeof WebSocket !== 'undefined') {\n\t  BrowserWebSocket = WebSocket;\n\t} else if (typeof self !== 'undefined') {\n\t  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n\t}\n\t\n\tif (typeof window === 'undefined') {\n\t  try {\n\t    NodeWebSocket = __webpack_require__(24);\n\t  } catch (e) {}\n\t}\n\t\n\t/**\n\t * Get either the `WebSocket` or `MozWebSocket` globals\n\t * in the browser or try to resolve WebSocket-compatible\n\t * interface exposed by `ws` for Node-like environment.\n\t */\n\t\n\tvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = WS;\n\t\n\t/**\n\t * WebSocket transport constructor.\n\t *\n\t * @api {Object} connection options\n\t * @api public\n\t */\n\t\n\tfunction WS (opts) {\n\t  var forceBase64 = opts && opts.forceBase64;\n\t  if (forceBase64) {\n\t    this.supportsBinary = false;\n\t  }\n\t  this.perMessageDeflate = opts.perMessageDeflate;\n\t  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n\t  this.protocols = opts.protocols;\n\t  if (!this.usingBrowserWebSocket) {\n\t    WebSocketImpl = NodeWebSocket;\n\t  }\n\t  Transport.call(this, opts);\n\t}\n\t\n\t/**\n\t * Inherits from Transport.\n\t */\n\t\n\tinherit(WS, Transport);\n\t\n\t/**\n\t * Transport name.\n\t *\n\t * @api public\n\t */\n\t\n\tWS.prototype.name = 'websocket';\n\t\n\t/*\n\t * WebSockets support binary\n\t */\n\t\n\tWS.prototype.supportsBinary = true;\n\t\n\t/**\n\t * Opens socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doOpen = function () {\n\t  if (!this.check()) {\n\t    // let probe timeout\n\t    return;\n\t  }\n\t\n\t  var uri = this.uri();\n\t  var protocols = this.protocols;\n\t  var opts = {\n\t    agent: this.agent,\n\t    perMessageDeflate: this.perMessageDeflate\n\t  };\n\t\n\t  // SSL options for Node.js client\n\t  opts.pfx = this.pfx;\n\t  opts.key = this.key;\n\t  opts.passphrase = this.passphrase;\n\t  opts.cert = this.cert;\n\t  opts.ca = this.ca;\n\t  opts.ciphers = this.ciphers;\n\t  opts.rejectUnauthorized = this.rejectUnauthorized;\n\t  if (this.extraHeaders) {\n\t    opts.headers = this.extraHeaders;\n\t  }\n\t  if (this.localAddress) {\n\t    opts.localAddress = this.localAddress;\n\t  }\n\t\n\t  try {\n\t    this.ws =\n\t      this.usingBrowserWebSocket && !this.isReactNative\n\t        ? protocols\n\t          ? new WebSocketImpl(uri, protocols)\n\t          : new WebSocketImpl(uri)\n\t        : new WebSocketImpl(uri, protocols, opts);\n\t  } catch (err) {\n\t    return this.emit('error', err);\n\t  }\n\t\n\t  if (this.ws.binaryType === undefined) {\n\t    this.supportsBinary = false;\n\t  }\n\t\n\t  if (this.ws.supports && this.ws.supports.binary) {\n\t    this.supportsBinary = true;\n\t    this.ws.binaryType = 'nodebuffer';\n\t  } else {\n\t    this.ws.binaryType = 'arraybuffer';\n\t  }\n\t\n\t  this.addEventListeners();\n\t};\n\t\n\t/**\n\t * Adds event listeners to the socket\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.addEventListeners = function () {\n\t  var self = this;\n\t\n\t  this.ws.onopen = function () {\n\t    self.onOpen();\n\t  };\n\t  this.ws.onclose = function () {\n\t    self.onClose();\n\t  };\n\t  this.ws.onmessage = function (ev) {\n\t    self.onData(ev.data);\n\t  };\n\t  this.ws.onerror = function (e) {\n\t    self.onError('websocket error', e);\n\t  };\n\t};\n\t\n\t/**\n\t * Writes data to socket.\n\t *\n\t * @param {Array} array of packets.\n\t * @api private\n\t */\n\t\n\tWS.prototype.write = function (packets) {\n\t  var self = this;\n\t  this.writable = false;\n\t\n\t  // encodePacket efficient as it uses WS framing\n\t  // no need for encodePayload\n\t  var total = packets.length;\n\t  for (var i = 0, l = total; i < l; i++) {\n\t    (function (packet) {\n\t      parser.encodePacket(packet, self.supportsBinary, function (data) {\n\t        if (!self.usingBrowserWebSocket) {\n\t          // always create a new object (GH-437)\n\t          var opts = {};\n\t          if (packet.options) {\n\t            opts.compress = packet.options.compress;\n\t          }\n\t\n\t          if (self.perMessageDeflate) {\n\t            var len =\n\t              'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\t            if (len < self.perMessageDeflate.threshold) {\n\t              opts.compress = false;\n\t            }\n\t          }\n\t        }\n\t\n\t        // Sometimes the websocket has already been closed but the browser didn't\n\t        // have a chance of informing us about it yet, in that case send will\n\t        // throw an error\n\t        try {\n\t          if (self.usingBrowserWebSocket) {\n\t            // TypeError is thrown when passing the second argument on Safari\n\t            self.ws.send(data);\n\t          } else {\n\t            self.ws.send(data, opts);\n\t          }\n\t        } catch (e) {}\n\t\n\t        --total || done();\n\t      });\n\t    })(packets[i]);\n\t  }\n\t\n\t  function done () {\n\t    self.emit('flush');\n\t\n\t    // fake drain\n\t    // defer to next tick to allow Socket to clear writeBuffer\n\t    setTimeout(function () {\n\t      self.writable = true;\n\t      self.emit('drain');\n\t    }, 0);\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon close\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.onClose = function () {\n\t  Transport.prototype.onClose.call(this);\n\t};\n\t\n\t/**\n\t * Closes socket.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.doClose = function () {\n\t  if (typeof this.ws !== 'undefined') {\n\t    this.ws.close();\n\t  }\n\t};\n\t\n\t/**\n\t * Generates uri for connection.\n\t *\n\t * @api private\n\t */\n\t\n\tWS.prototype.uri = function () {\n\t  var query = this.query || {};\n\t  var schema = this.secure ? 'wss' : 'ws';\n\t  var port = '';\n\t\n\t  // avoid port if default for schema\n\t  if (\n\t    this.port &&\n\t    (('wss' === schema && Number(this.port) !== 443) ||\n\t      ('ws' === schema && Number(this.port) !== 80))\n\t  ) {\n\t    port = ':' + this.port;\n\t  }\n\t\n\t  // append timestamp to URI\n\t  if (this.timestampRequests) {\n\t    query[this.timestampParam] = yeast();\n\t  }\n\t\n\t  // communicate binary support capabilities\n\t  if (!this.supportsBinary) {\n\t    query.b64 = 1;\n\t  }\n\t\n\t  query = parseqs.encode(query);\n\t\n\t  // prepend ? to query\n\t  if (query.length) {\n\t    query = '?' + query;\n\t  }\n\t\n\t  var ipv6 = this.hostname.indexOf(':') !== -1;\n\t  return (\n\t    schema +\n\t    '://' +\n\t    (ipv6 ? '[' + this.hostname + ']' : this.hostname) +\n\t    port +\n\t    this.path +\n\t    query\n\t  );\n\t};\n\t\n\t/**\n\t * Feature detection for WebSocket.\n\t *\n\t * @return {Boolean} whether this transport is available.\n\t * @api public\n\t */\n\t\n\tWS.prototype.check = function () {\n\t  return (\n\t    !!WebSocketImpl &&\n\t    !('__initialize' in WebSocketImpl && this.name === WS.prototype.name)\n\t  );\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(15);\n\tvar Emitter = __webpack_require__(5);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = Transport;\n\t\n\t/**\n\t * Transport abstract constructor.\n\t *\n\t * @param {Object} options.\n\t * @api private\n\t */\n\t\n\tfunction Transport(opts) {\n\t  this.path = opts.path;\n\t  this.hostname = opts.hostname;\n\t  this.port = opts.port;\n\t  this.secure = opts.secure;\n\t  this.query = opts.query;\n\t  this.timestampParam = opts.timestampParam;\n\t  this.timestampRequests = opts.timestampRequests;\n\t  this.readyState = \"\";\n\t  this.agent = opts.agent || false;\n\t  this.socket = opts.socket;\n\t  this.enablesXDR = opts.enablesXDR;\n\t  this.withCredentials = opts.withCredentials;\n\t\n\t  // SSL options for Node.js client\n\t  this.pfx = opts.pfx;\n\t  this.key = opts.key;\n\t  this.passphrase = opts.passphrase;\n\t  this.cert = opts.cert;\n\t  this.ca = opts.ca;\n\t  this.ciphers = opts.ciphers;\n\t  this.rejectUnauthorized = opts.rejectUnauthorized;\n\t  this.forceNode = opts.forceNode;\n\t\n\t  // results of ReactNative environment detection\n\t  this.isReactNative = opts.isReactNative;\n\t\n\t  // other options for Node.js client\n\t  this.extraHeaders = opts.extraHeaders;\n\t  this.localAddress = opts.localAddress;\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Transport.prototype);\n\t\n\t/**\n\t * Emits an error.\n\t *\n\t * @param {String} str\n\t * @return {Transport} for chaining\n\t * @api public\n\t */\n\t\n\tTransport.prototype.onError = function(msg, desc) {\n\t  var err = new Error(msg);\n\t  err.type = \"TransportError\";\n\t  err.description = desc;\n\t  this.emit(\"error\", err);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Opens the transport.\n\t *\n\t * @api public\n\t */\n\t\n\tTransport.prototype.open = function() {\n\t  if (\"closed\" === this.readyState || \"\" === this.readyState) {\n\t    this.readyState = \"opening\";\n\t    this.doOpen();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Closes the transport.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.close = function() {\n\t  if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n\t    this.doClose();\n\t    this.onClose();\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends multiple packets.\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\tTransport.prototype.send = function(packets) {\n\t  if (\"open\" === this.readyState) {\n\t    this.write(packets);\n\t  } else {\n\t    throw new Error(\"Transport not open\");\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon open\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onOpen = function() {\n\t  this.readyState = \"open\";\n\t  this.writable = true;\n\t  this.emit(\"open\");\n\t};\n\t\n\t/**\n\t * Called with data.\n\t *\n\t * @param {String} data\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onData = function(data) {\n\t  var packet = parser.decodePacket(data, this.socket.binaryType);\n\t  this.onPacket(packet);\n\t};\n\t\n\t/**\n\t * Called with a decoded packet.\n\t */\n\t\n\tTransport.prototype.onPacket = function(packet) {\n\t  this.emit(\"packet\", packet);\n\t};\n\t\n\t/**\n\t * Called upon close.\n\t *\n\t * @api private\n\t */\n\t\n\tTransport.prototype.onClose = function() {\n\t  this.readyState = \"closed\";\n\t  this.emit(\"close\");\n\t};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar keys = __webpack_require__(16);\n\tvar hasBinary = __webpack_require__(17);\n\tvar sliceBuffer = __webpack_require__(18);\n\tvar after = __webpack_require__(19);\n\tvar utf8 = __webpack_require__(20);\n\t\n\t/**\n\t * Current protocol version.\n\t */\n\t\n\texports.protocol = 3;\n\t\n\t/**\n\t * Packet types.\n\t */\n\t\n\tvar packets = (exports.packets = {\n\t  open: 0, // non-ws\n\t  close: 1, // non-ws\n\t  ping: 2,\n\t  pong: 3,\n\t  message: 4,\n\t  upgrade: 5,\n\t  noop: 6\n\t});\n\t\n\tvar packetslist = keys(packets);\n\t\n\t/**\n\t * Premade error packet.\n\t */\n\t\n\tvar err = { type: \"error\", data: \"parser error\" };\n\t\n\t/**\n\t * Encodes a packet.\n\t *\n\t *     <packet type id> [ <data> ]\n\t *\n\t * Example:\n\t *\n\t *     5hello world\n\t *     3\n\t *     4\n\t *\n\t * Binary is encoded in an identical principle\n\t *\n\t * @api private\n\t */\n\t\n\texports.encodePacket = function(packet, supportsBinary, utf8encode, callback) {\n\t  if (typeof supportsBinary === \"function\") {\n\t    callback = supportsBinary;\n\t    supportsBinary = false;\n\t  }\n\t\n\t  if (typeof utf8encode === \"function\") {\n\t    callback = utf8encode;\n\t    utf8encode = null;\n\t  }\n\t\n\t  var data =\n\t    packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\t\n\t  // Sending data as a utf-8 string\n\t  var encoded = packets[packet.type];\n\t\n\t  // data fragment is optional\n\t  if (undefined !== packet.data) {\n\t    encoded += utf8encode\n\t      ? utf8.encode(String(packet.data), { strict: false })\n\t      : String(packet.data);\n\t  }\n\t\n\t  return callback(\"\" + encoded);\n\t};\n\t\n\t/**\n\t * Encode packet helpers for binary types\n\t */\n\t\n\t/**\n\t * Decodes a packet. Changes format to Blob if requested.\n\t *\n\t * @return {Object} with `type` and `data` (if any)\n\t * @api private\n\t */\n\t\n\texports.decodePacket = function(data, binaryType, utf8decode) {\n\t  if (data === undefined) {\n\t    return err;\n\t  }\n\t  // String data\n\t  if (typeof data === \"string\") {\n\t    if (utf8decode) {\n\t      data = tryDecode(data);\n\t      if (data === false) {\n\t        return err;\n\t      }\n\t    }\n\t    var type = data.charAt(0);\n\t\n\t    if (Number(type) != type || !packetslist[type]) {\n\t      return err;\n\t    }\n\t\n\t    if (data.length > 1) {\n\t      return { type: packetslist[type], data: data.substring(1) };\n\t    } else {\n\t      return { type: packetslist[type] };\n\t    }\n\t  }\n\t\n\t  var asArray = new Uint8Array(data);\n\t  var type = asArray[0];\n\t  var rest = sliceBuffer(data, 1);\n\t  return { type: packetslist[type], data: rest };\n\t};\n\t\n\tfunction tryDecode(data) {\n\t  try {\n\t    data = utf8.decode(data, { strict: false });\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  return data;\n\t}\n\t\n\t/**\n\t * Encodes multiple messages (payload).\n\t *\n\t *     <length>:data\n\t *\n\t * Example:\n\t *\n\t *     11:hello world2:hi\n\t *\n\t * If any contents are binary, they will be encoded as base64 strings. Base64\n\t * encoded strings are marked with a b before the length specifier\n\t *\n\t * @param {Array} packets\n\t * @api private\n\t */\n\t\n\texports.encodePayload = function(packets, supportsBinary, callback) {\n\t  if (typeof supportsBinary === \"function\") {\n\t    callback = supportsBinary;\n\t    supportsBinary = null;\n\t  }\n\t\n\t  var isBinary = hasBinary(packets);\n\t\n\t  if (!packets.length) {\n\t    return callback(\"0:\");\n\t  }\n\t\n\t  function setLengthHeader(message) {\n\t    return message.length + \":\" + message;\n\t  }\n\t\n\t  function encodeOne(packet, doneCallback) {\n\t    exports.encodePacket(\n\t      packet,\n\t      !isBinary ? false : supportsBinary,\n\t      false,\n\t      function(message) {\n\t        doneCallback(null, setLengthHeader(message));\n\t      }\n\t    );\n\t  }\n\t\n\t  map(packets, encodeOne, function(err, results) {\n\t    return callback(results.join(\"\"));\n\t  });\n\t};\n\t\n\t/**\n\t * Async array map using after\n\t */\n\t\n\tfunction map(ary, each, done) {\n\t  var result = new Array(ary.length);\n\t  var next = after(ary.length, done);\n\t\n\t  var eachWithIndex = function(i, el, cb) {\n\t    each(el, function(error, msg) {\n\t      result[i] = msg;\n\t      cb(error, result);\n\t    });\n\t  };\n\t\n\t  for (var i = 0; i < ary.length; i++) {\n\t    eachWithIndex(i, ary[i], next);\n\t  }\n\t}\n\t\n\t/*\n\t * Decodes data when a payload is maybe expected. Possible binary contents are\n\t * decoded from their base64 representation\n\t *\n\t * @param {String} data, callback method\n\t * @api public\n\t */\n\t\n\texports.decodePayload = function(data, binaryType, callback) {\n\t  if (typeof binaryType === \"function\") {\n\t    callback = binaryType;\n\t    binaryType = null;\n\t  }\n\t\n\t  var packet;\n\t  if (data === \"\") {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t\n\t  var length = \"\",\n\t    n,\n\t    msg;\n\t\n\t  for (var i = 0, l = data.length; i < l; i++) {\n\t    var chr = data.charAt(i);\n\t\n\t    if (chr !== \":\") {\n\t      length += chr;\n\t      continue;\n\t    }\n\t\n\t    if (length === \"\" || length != (n = Number(length))) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    msg = data.substr(i + 1, n);\n\t\n\t    if (length != msg.length) {\n\t      // parser error - ignoring payload\n\t      return callback(err, 0, 1);\n\t    }\n\t\n\t    if (msg.length) {\n\t      packet = exports.decodePacket(msg, binaryType, false);\n\t\n\t      if (err.type === packet.type && err.data === packet.data) {\n\t        // parser error in individual packet - ignoring payload\n\t        return callback(err, 0, 1);\n\t      }\n\t\n\t      var ret = callback(packet, i + n, l);\n\t      if (false === ret) return;\n\t    }\n\t\n\t    // advance cursor\n\t    i += n;\n\t    length = \"\";\n\t  }\n\t\n\t  if (length !== \"\") {\n\t    // parser error - ignoring payload\n\t    return callback(err, 0, 1);\n\t  }\n\t};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Gets the keys for an object.\n\t *\n\t * @return {Array} keys\n\t * @api private\n\t */\n\t\n\tmodule.exports = Object.keys || function keys (obj){\n\t  var arr = [];\n\t  var has = Object.prototype.hasOwnProperty;\n\t\n\t  for (var i in obj) {\n\t    if (has.call(obj, i)) {\n\t      arr.push(i);\n\t    }\n\t  }\n\t  return arr;\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* global Blob File */\n\t\n\t/*\n\t * Module requirements.\n\t */\n\t\n\tvar isArray = __webpack_require__(7);\n\t\n\tvar toString = Object.prototype.toString;\n\tvar withNativeBlob = typeof Blob === 'function' ||\n\t                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\n\tvar withNativeFile = typeof File === 'function' ||\n\t                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = hasBinary;\n\t\n\t/**\n\t * Checks for binary data.\n\t *\n\t * Supports Buffer, ArrayBuffer, Blob and File.\n\t *\n\t * @param {Object} anything\n\t * @api public\n\t */\n\t\n\tfunction hasBinary (obj) {\n\t  if (!obj || typeof obj !== 'object') {\n\t    return false;\n\t  }\n\t\n\t  if (isArray(obj)) {\n\t    for (var i = 0, l = obj.length; i < l; i++) {\n\t      if (hasBinary(obj[i])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n\t    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n\t    (withNativeBlob && obj instanceof Blob) ||\n\t    (withNativeFile && obj instanceof File)\n\t  ) {\n\t    return true;\n\t  }\n\t\n\t  // see: https://github.com/Automattic/has-binary/pull/4\n\t  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n\t    return hasBinary(obj.toJSON(), true);\n\t  }\n\t\n\t  for (var key in obj) {\n\t    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n\t      return true;\n\t    }\n\t  }\n\t\n\t  return false;\n\t}\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * An abstraction for slicing an arraybuffer even when\n\t * ArrayBuffer.prototype.slice is not supported\n\t *\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(arraybuffer, start, end) {\n\t  var bytes = arraybuffer.byteLength;\n\t  start = start || 0;\n\t  end = end || bytes;\n\t\n\t  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\t\n\t  if (start < 0) { start += bytes; }\n\t  if (end < 0) { end += bytes; }\n\t  if (end > bytes) { end = bytes; }\n\t\n\t  if (start >= bytes || start >= end || bytes === 0) {\n\t    return new ArrayBuffer(0);\n\t  }\n\t\n\t  var abv = new Uint8Array(arraybuffer);\n\t  var result = new Uint8Array(end - start);\n\t  for (var i = start, ii = 0; i < end; i++, ii++) {\n\t    result[ii] = abv[i];\n\t  }\n\t  return result.buffer;\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = after\n\t\n\tfunction after(count, callback, err_cb) {\n\t    var bail = false\n\t    err_cb = err_cb || noop\n\t    proxy.count = count\n\t\n\t    return (count === 0) ? callback() : proxy\n\t\n\t    function proxy(err, result) {\n\t        if (proxy.count <= 0) {\n\t            throw new Error('after called too many times')\n\t        }\n\t        --proxy.count\n\t\n\t        // after first error, rest are passed to err_cb\n\t        if (err) {\n\t            bail = true\n\t            callback(err)\n\t            // future error callbacks will go to error handler\n\t            callback = err_cb\n\t        } else if (proxy.count === 0 && !bail) {\n\t            callback(null, result)\n\t        }\n\t    }\n\t}\n\t\n\tfunction noop() {}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\t\n\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\t\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\t\n\tfunction checkScalarValue(codePoint, strict) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tif (strict) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\t\n\tfunction encodeCodePoint(codePoint, strict) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\t\tcodePoint = 0xFFFD;\n\t\t\t}\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\t\n\tfunction utf8encode(string, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t\t}\n\t\treturn byteString;\n\t}\n\t\n\t/*--------------------------------------------------------------------------*/\n\t\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\t\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\t\n\tfunction decodeSymbol(strict) {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\t\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\t\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\t\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\t\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\t\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\t\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\t\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString, opts) {\n\t\topts = opts || {};\n\t\tvar strict = false !== opts.strict;\n\t\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\t\n\tmodule.exports = {\n\t\tversion: '2.1.2',\n\t\tencode: utf8encode,\n\t\tdecode: utf8decode\n\t};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * Compiles a querystring\r\n\t * Returns string representation of the object\r\n\t *\r\n\t * @param {Object}\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.encode = function (obj) {\r\n\t  var str = '';\r\n\t\r\n\t  for (var i in obj) {\r\n\t    if (obj.hasOwnProperty(i)) {\r\n\t      if (str.length) str += '&';\r\n\t      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Parses a simple querystring into an object\r\n\t *\r\n\t * @param {String} qs\r\n\t * @api private\r\n\t */\r\n\t\r\n\texports.decode = function(qs){\r\n\t  var qry = {};\r\n\t  var pairs = qs.split('&');\r\n\t  for (var i = 0, l = pairs.length; i < l; i++) {\r\n\t    var pair = pairs[i].split('=');\r\n\t    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n\t  }\r\n\t  return qry;\r\n\t};\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n\t\n\tmodule.exports = function(a, b){\n\t  var fn = function(){};\n\t  fn.prototype = b.prototype;\n\t  a.prototype = new fn;\n\t  a.prototype.constructor = a;\n\t};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n\t  , length = 64\n\t  , map = {}\n\t  , seed = 0\n\t  , i = 0\n\t  , prev;\n\t\n\t/**\n\t * Return a string representing the specified number.\n\t *\n\t * @param {Number} num The number to convert.\n\t * @returns {String} The string representation of the number.\n\t * @api public\n\t */\n\tfunction encode(num) {\n\t  var encoded = '';\n\t\n\t  do {\n\t    encoded = alphabet[num % length] + encoded;\n\t    num = Math.floor(num / length);\n\t  } while (num > 0);\n\t\n\t  return encoded;\n\t}\n\t\n\t/**\n\t * Return the integer value specified by the given string.\n\t *\n\t * @param {String} str The string to convert.\n\t * @returns {Number} The integer value represented by the string.\n\t * @api public\n\t */\n\tfunction decode(str) {\n\t  var decoded = 0;\n\t\n\t  for (i = 0; i < str.length; i++) {\n\t    decoded = decoded * length + map[str.charAt(i)];\n\t  }\n\t\n\t  return decoded;\n\t}\n\t\n\t/**\n\t * Yeast: A tiny growing id generator.\n\t *\n\t * @returns {String} A unique id.\n\t * @api public\n\t */\n\tfunction yeast() {\n\t  var now = encode(+new Date());\n\t\n\t  if (now !== prev) return seed = 0, prev = now;\n\t  return now +'.'+ encode(seed++);\n\t}\n\t\n\t//\n\t// Map each character to its index.\n\t//\n\tfor (; i < length; i++) map[alphabet[i]] = i;\n\t\n\t//\n\t// Expose the `yeast`, `encode` and `decode` functions.\n\t//\n\tyeast.encode = encode;\n\tyeast.decode = decode;\n\tmodule.exports = yeast;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n\t/* (ignored) */\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar parser = __webpack_require__(4);\n\tvar Emitter = __webpack_require__(5);\n\tvar toArray = __webpack_require__(26);\n\tvar on = __webpack_require__(27);\n\tvar bind = __webpack_require__(28);\n\tvar parseqs = __webpack_require__(21);\n\tvar hasBin = __webpack_require__(17);\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = exports = Socket;\n\t\n\t/**\n\t * Internal events (blacklisted).\n\t * These events can't be emitted by the user.\n\t *\n\t * @api private\n\t */\n\t\n\tvar events = {\n\t  connect: 1,\n\t  connect_error: 1,\n\t  connect_timeout: 1,\n\t  connecting: 1,\n\t  disconnect: 1,\n\t  error: 1,\n\t  reconnect: 1,\n\t  reconnect_attempt: 1,\n\t  reconnect_failed: 1,\n\t  reconnect_error: 1,\n\t  reconnecting: 1,\n\t  ping: 1,\n\t  pong: 1\n\t};\n\t\n\t/**\n\t * Shortcut to `Emitter#emit`.\n\t */\n\t\n\tvar emit = Emitter.prototype.emit;\n\t\n\t/**\n\t * `Socket` constructor.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Socket(io, nsp, opts) {\n\t  this.io = io;\n\t  this.nsp = nsp;\n\t  this.json = this; // compat\n\t  this.ids = 0;\n\t  this.acks = {};\n\t  this.receiveBuffer = [];\n\t  this.sendBuffer = [];\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  this.flags = {};\n\t  if (opts && opts.query) {\n\t    this.query = opts.query;\n\t  }\n\t  if (this.io.autoConnect) this.open();\n\t}\n\t\n\t/**\n\t * Mix in `Emitter`.\n\t */\n\t\n\tEmitter(Socket.prototype);\n\t\n\t/**\n\t * Subscribe to open, close and packet events\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.subEvents = function () {\n\t  if (this.subs) return;\n\t\n\t  var io = this.io;\n\t  this.subs = [on(io, \"open\", bind(this, \"onopen\")), on(io, \"packet\", bind(this, \"onpacket\")), on(io, \"close\", bind(this, \"onclose\"))];\n\t};\n\t\n\t/**\n\t * \"Opens\" the socket.\n\t *\n\t * @api public\n\t */\n\t\n\tSocket.prototype.open = Socket.prototype.connect = function () {\n\t  if (this.connected) return this;\n\t\n\t  this.subEvents();\n\t  this.io.open(); // ensure open\n\t  if (\"open\" === this.io.readyState) this.onopen();\n\t  this.emit(\"connecting\");\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a `message` event.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.send = function () {\n\t  var args = toArray(arguments);\n\t  args.unshift(\"message\");\n\t  this.emit.apply(this, args);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Override `emit`.\n\t * If the event is in `events`, it's emitted normally.\n\t *\n\t * @param {String} event name\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.emit = function (ev) {\n\t  if (events.hasOwnProperty(ev)) {\n\t    emit.apply(this, arguments);\n\t    return this;\n\t  }\n\t\n\t  var args = toArray(arguments);\n\t  var packet = {\n\t    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n\t    data: args\n\t  };\n\t\n\t  packet.options = {};\n\t  packet.options.compress = !this.flags || false !== this.flags.compress;\n\t\n\t  // event ack callback\n\t  if (\"function\" === typeof args[args.length - 1]) {\n\t    this.acks[this.ids] = args.pop();\n\t    packet.id = this.ids++;\n\t  }\n\t\n\t  if (this.connected) {\n\t    this.packet(packet);\n\t  } else {\n\t    this.sendBuffer.push(packet);\n\t  }\n\t\n\t  this.flags = {};\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sends a packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.packet = function (packet) {\n\t  packet.nsp = this.nsp;\n\t  this.io.packet(packet);\n\t};\n\t\n\t/**\n\t * Called upon engine `open`.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onopen = function () {\n\t  // write connect packet if necessary\n\t  if (\"/\" !== this.nsp) {\n\t    if (this.query) {\n\t      var query = typeof this.query === \"object\" ? parseqs.encode(this.query) : this.query;\n\t      this.packet({ type: parser.CONNECT, query: query });\n\t    } else {\n\t      this.packet({ type: parser.CONNECT });\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon engine `close`.\n\t *\n\t * @param {String} reason\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onclose = function (reason) {\n\t  this.connected = false;\n\t  this.disconnected = true;\n\t  delete this.id;\n\t  this.emit(\"disconnect\", reason);\n\t};\n\t\n\t/**\n\t * Called with socket packet.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onpacket = function (packet) {\n\t  var sameNamespace = packet.nsp === this.nsp;\n\t  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === \"/\";\n\t\n\t  if (!sameNamespace && !rootNamespaceError) return;\n\t\n\t  switch (packet.type) {\n\t    case parser.CONNECT:\n\t      this.onconnect();\n\t      break;\n\t\n\t    case parser.EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.BINARY_EVENT:\n\t      this.onevent(packet);\n\t      break;\n\t\n\t    case parser.ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.BINARY_ACK:\n\t      this.onack(packet);\n\t      break;\n\t\n\t    case parser.DISCONNECT:\n\t      this.ondisconnect();\n\t      break;\n\t\n\t    case parser.ERROR:\n\t      this.emit(\"error\", packet.data);\n\t      break;\n\t  }\n\t};\n\t\n\t/**\n\t * Called upon a server event.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onevent = function (packet) {\n\t  var args = packet.data || [];\n\t\n\t  if (null != packet.id) {\n\t    args.push(this.ack(packet.id));\n\t  }\n\t\n\t  if (this.connected) {\n\t    emit.apply(this, args);\n\t  } else {\n\t    this.receiveBuffer.push(args);\n\t  }\n\t};\n\t\n\t/**\n\t * Produces an ack callback to emit with an event.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ack = function (id) {\n\t  var self = this;\n\t  var sent = false;\n\t  return function () {\n\t    // prevent double callbacks\n\t    if (sent) return;\n\t    sent = true;\n\t    var args = toArray(arguments);\n\t\n\t    self.packet({\n\t      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n\t      id: id,\n\t      data: args\n\t    });\n\t  };\n\t};\n\t\n\t/**\n\t * Called upon a server acknowlegement.\n\t *\n\t * @param {Object} packet\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onack = function (packet) {\n\t  var ack = this.acks[packet.id];\n\t  if (\"function\" === typeof ack) {\n\t    ack.apply(this, packet.data);\n\t    delete this.acks[packet.id];\n\t  } else {}\n\t};\n\t\n\t/**\n\t * Called upon server connect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.onconnect = function () {\n\t  this.connected = true;\n\t  this.disconnected = false;\n\t  this.emit(\"connect\");\n\t  this.emitBuffered();\n\t};\n\t\n\t/**\n\t * Emit buffered events (received and emitted).\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.emitBuffered = function () {\n\t  var i;\n\t  for (i = 0; i < this.receiveBuffer.length; i++) {\n\t    emit.apply(this, this.receiveBuffer[i]);\n\t  }\n\t  this.receiveBuffer = [];\n\t\n\t  for (i = 0; i < this.sendBuffer.length; i++) {\n\t    this.packet(this.sendBuffer[i]);\n\t  }\n\t  this.sendBuffer = [];\n\t};\n\t\n\t/**\n\t * Called upon server disconnect.\n\t *\n\t * @api private\n\t */\n\t\n\tSocket.prototype.ondisconnect = function () {\n\t  this.destroy();\n\t  this.onclose(\"io server disconnect\");\n\t};\n\t\n\t/**\n\t * Called upon forced client/server side disconnections,\n\t * this method ensures the manager stops tracking us and\n\t * that reconnections don't get triggered for this.\n\t *\n\t * @api private.\n\t */\n\t\n\tSocket.prototype.destroy = function () {\n\t  if (this.subs) {\n\t    // clean subscriptions to avoid reconnections\n\t    for (var i = 0; i < this.subs.length; i++) {\n\t      this.subs[i].destroy();\n\t    }\n\t    this.subs = null;\n\t  }\n\t\n\t  this.io.destroy(this);\n\t};\n\t\n\t/**\n\t * Disconnects the socket manually.\n\t *\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.close = Socket.prototype.disconnect = function () {\n\t  if (this.connected) {\n\t    this.packet({ type: parser.DISCONNECT });\n\t  }\n\t\n\t  // remove socket from pool\n\t  this.destroy();\n\t\n\t  if (this.connected) {\n\t    // fire events\n\t    this.onclose(\"io client disconnect\");\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the compress flag.\n\t *\n\t * @param {Boolean} if `true`, compresses the sending data\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.compress = function (compress) {\n\t  this.flags.compress = compress;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Sets the binary flag\n\t *\n\t * @param {Boolean} whether the emitted data contains binary\n\t * @return {Socket} self\n\t * @api public\n\t */\n\t\n\tSocket.prototype.binary = function (binary) {\n\t  this.flags.binary = binary;\n\t  return this;\n\t};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = toArray\n\t\n\tfunction toArray(list, index) {\n\t    var array = []\n\t\n\t    index = index || 0\n\t\n\t    for (var i = index || 0; i < list.length; i++) {\n\t        array[i - index] = list[i]\n\t    }\n\t\n\t    return array\n\t}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Module exports.\n\t */\n\t\n\tmodule.exports = on;\n\t\n\t/**\n\t * Helper for subscriptions.\n\t *\n\t * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n\t * @param {String} event name\n\t * @param {Function} callback\n\t * @api public\n\t */\n\t\n\tfunction on(obj, ev, fn) {\n\t  obj.on(ev, fn);\n\t  return {\n\t    destroy: function () {\n\t      obj.removeListener(ev, fn);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Slice reference.\n\t */\n\t\n\tvar slice = [].slice;\n\t\n\t/**\n\t * Bind `obj` to `fn`.\n\t *\n\t * @param {Object} obj\n\t * @param {Function|String} fn or string\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(obj, fn){\n\t  if ('string' == typeof fn) fn = obj[fn];\n\t  if ('function' != typeof fn) throw new Error('bind() requires a function');\n\t  var args = slice.call(arguments, 2);\n\t  return function(){\n\t    return fn.apply(obj, args.concat(slice.call(arguments)));\n\t  }\n\t};\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Backoff`.\n\t */\n\t\n\tmodule.exports = Backoff;\n\t\n\t/**\n\t * Initialize backoff timer with `opts`.\n\t *\n\t * - `min` initial timeout in milliseconds [100]\n\t * - `max` max timeout [10000]\n\t * - `jitter` [0]\n\t * - `factor` [2]\n\t *\n\t * @param {Object} opts\n\t * @api public\n\t */\n\t\n\tfunction Backoff(opts) {\n\t  opts = opts || {};\n\t  this.ms = opts.min || 100;\n\t  this.max = opts.max || 10000;\n\t  this.factor = opts.factor || 2;\n\t  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n\t  this.attempts = 0;\n\t}\n\t\n\t/**\n\t * Return the backoff duration.\n\t *\n\t * @return {Number}\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.duration = function(){\n\t  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\t  if (this.jitter) {\n\t    var rand =  Math.random();\n\t    var deviation = Math.floor(rand * this.jitter * ms);\n\t    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n\t  }\n\t  return Math.min(ms, this.max) | 0;\n\t};\n\t\n\t/**\n\t * Reset the number of attempts.\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.reset = function(){\n\t  this.attempts = 0;\n\t};\n\t\n\t/**\n\t * Set the minimum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMin = function(min){\n\t  this.ms = min;\n\t};\n\t\n\t/**\n\t * Set the maximum duration\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setMax = function(max){\n\t  this.max = max;\n\t};\n\t\n\t/**\n\t * Set the jitter\n\t *\n\t * @api public\n\t */\n\t\n\tBackoff.prototype.setJitter = function(jitter){\n\t  this.jitter = jitter;\n\t};\n\t\n\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// socket.io.slim.dev.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 129cdc7fc07a86b7a8e4","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n\n\n\n// WEBPACK FOOTER //\n// ./lib/index.js","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/url.js","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseuri/index.js\n// module id = 2\n// module chunks = 0","\nmodule.exports = function () { return function () {}; };\n\n\n\n// WEBPACK FOOTER //\n// ./support/noop.js","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/index.js\n// module id = 4\n// module chunks = 0","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-emitter/index.js\n// module id = 5\n// module chunks = 0","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/binary.js\n// module id = 6\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/isarray/index.js\n// module id = 7\n// module chunks = 0","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/socket.io-parser/is-buffer.js\n// module id = 8\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar eio = require('@jonny/engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  if (~this.readyState.indexOf('open')) return this;\n\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n\n    // set timer\n    var timer = setTimeout(function () {\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~self.connecting.indexOf(socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = this.connecting.indexOf(socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/manager.js","module.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('@jonny/engine.io-parser');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-client/lib/index.js\n// module id = 10\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar parser = require('@jonny/engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure =\n    null != opts.secure\n      ? opts.secure\n      : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.hostname =\n    opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port =\n    opts.port ||\n    (typeof location !== 'undefined' && location.port\n      ? location.port\n      : this.secure\n      ? 443\n      : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n\n  this.ca = opts.ca || null;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative =\n    typeof navigator !== 'undefined' &&\n    typeof navigator.product === 'string' &&\n    navigator.product.toLowerCase() === 'reactnative';\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('@jonny/engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (\n    this.rememberUpgrade &&\n    Socket.priorWebsocketSuccess &&\n    this.transports.indexOf('websocket') !== -1\n  ) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  var self = this;\n\n  if (this.transport) {\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n    .on('drain', function () {\n      self.onDrain();\n    })\n    .on('packet', function (packet) {\n      self.onPacket(packet);\n    })\n    .on('error', function (e) {\n      self.onError(e);\n    })\n    .on('close', function () {\n      self.onClose('transport close');\n    });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary =\n        !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if (\n    'opening' === this.readyState ||\n    'open' === this.readyState ||\n    'closing' === this.readyState\n  ) {\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n * Sends a ping packet.\n *\n * @api private\n */\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if (\n    'closed' !== this.readyState &&\n    this.transport.writable &&\n    !this.upgrading &&\n    this.writeBuffer.length\n  ) {\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if (\n    'opening' === this.readyState ||\n    'open' === this.readyState ||\n    'closing' === this.readyState\n  ) {\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~this.transports.indexOf(upgrades[i]))\n      filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-client/lib/socket.js\n// module id = 11\n// module chunks = 0","/**\n * Module dependencies\n */\n\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-client/lib/transports/index.js\n// module id = 12\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('@jonny/engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = opts && opts.forceBase64;\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len =\n              'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {}\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (\n    this.port &&\n    (('wss' === schema && Number(this.port) !== 443) ||\n      ('ws' === schema && Number(this.port) !== 80))\n  ) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return (\n    schema +\n    '://' +\n    (ipv6 ? '[' + this.hostname + ']' : this.hostname) +\n    port +\n    this.path +\n    query\n  );\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return (\n    !!WebSocketImpl &&\n    !('__initialize' in WebSocketImpl && this.name === WS.prototype.name)\n  );\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-client/lib/transports/websocket.js\n// module id = 13\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar parser = require(\"@jonny/engine.io-parser\");\nvar Emitter = require(\"component-emitter\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = \"\";\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function(msg, desc) {\n  var err = new Error(msg);\n  err.type = \"TransportError\";\n  err.description = desc;\n  this.emit(\"error\", err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function() {\n  if (\"closed\" === this.readyState || \"\" === this.readyState) {\n    this.readyState = \"opening\";\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function() {\n  if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets) {\n  if (\"open\" === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error(\"Transport not open\");\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function() {\n  this.readyState = \"open\";\n  this.writable = true;\n  this.emit(\"open\");\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function(packet) {\n  this.emit(\"packet\", packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function() {\n  this.readyState = \"closed\";\n  this.emit(\"close\");\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-client/lib/transport.js\n// module id = 14\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar keys = require(\"./keys\");\nvar hasBinary = require(\"has-binary2\");\nvar sliceBuffer = require(\"arraybuffer.slice\");\nvar after = require(\"after\");\nvar utf8 = require(\"./utf8\");\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = (exports.packets = {\n  open: 0, // non-ws\n  close: 1, // non-ws\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n});\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: \"error\", data: \"parser error\" };\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function(packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === \"function\") {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === \"function\") {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data =\n    packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode\n      ? utf8.encode(String(packet.data), { strict: false })\n      : String(packet.data);\n  }\n\n  return callback(\"\" + encoded);\n};\n\n/**\n * Encode packet helpers for binary types\n */\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function(data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === \"string\") {\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function(packets, supportsBinary, callback) {\n  if (typeof supportsBinary === \"function\") {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (!packets.length) {\n    return callback(\"0:\");\n  }\n\n  function setLengthHeader(message) {\n    return message.length + \":\" + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(\n      packet,\n      !isBinary ? false : supportsBinary,\n      false,\n      function(message) {\n        doneCallback(null, setLengthHeader(message));\n      }\n    );\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(\"\"));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function(data, binaryType, callback) {\n  if (typeof binaryType === \"function\") {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === \"\") {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = \"\",\n    n,\n    msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== \":\") {\n      length += chr;\n      continue;\n    }\n\n    if (length === \"\" || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = \"\";\n  }\n\n  if (length !== \"\") {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-parser/lib/browser.js\n// module id = 15\n// module chunks = 0","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-parser/lib/keys.js\n// module id = 16\n// module chunks = 0","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/has-binary2/index.js\n// module id = 17\n// module chunks = 0","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/arraybuffer.slice/index.js\n// module id = 18\n// module chunks = 0","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/after/index.js\n// module id = 19\n// module chunks = 0","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@jonny/engine.io-parser/lib/utf8.js\n// module id = 20\n// module chunks = 0","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/parseqs/index.js\n// module id = 21\n// module chunks = 0","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-inherit/index.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/yeast/index.js\n// module id = 23\n// module chunks = 0","/**\n * Module dependencies.\n */\n\nvar parser = require(\"socket.io-parser\");\nvar Emitter = require(\"component-emitter\");\nvar toArray = require(\"to-array\");\nvar on = require(\"./on\");\nvar bind = require(\"component-bind\");\nvar parseqs = require(\"parseqs\");\nvar hasBin = require(\"has-binary2\");\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, \"open\", bind(this, \"onopen\")),\n    on(io, \"packet\", bind(this, \"onpacket\")),\n    on(io, \"close\", bind(this, \"onclose\"))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open = Socket.prototype.connect = function() {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if (\"open\" === this.io.readyState) this.onopen();\n  this.emit(\"connecting\");\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function() {\n  var args = toArray(arguments);\n  args.unshift(\"message\");\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined\n    ? this.flags.binary\n    : hasBin(args))\n      ? parser.BINARY_EVENT\n      : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if (\"function\" === typeof args[args.length - 1]) {\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function() {\n  // write connect packet if necessary\n  if (\"/\" !== this.nsp) {\n    if (this.query) {\n      var query =\n        typeof this.query === \"object\"\n          ? parseqs.encode(this.query)\n          : this.query;\n      this.packet({ type: parser.CONNECT, query: query });\n    } else {\n      this.packet({ type: parser.CONNECT });\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason) {\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit(\"disconnect\", reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === \"/\";\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit(\"error\", packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet) {\n  var args = packet.data || [];\n\n  if (null != packet.id) {\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id) {\n  var self = this;\n  var sent = false;\n  return function() {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet) {\n  var ack = this.acks[packet.id];\n  if (\"function\" === typeof ack) {\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function() {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit(\"connect\");\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function() {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function() {\n  this.destroy();\n  this.onclose(\"io server disconnect\");\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function() {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close = Socket.prototype.disconnect = function() {\n  if (this.connected) {\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose(\"io client disconnect\");\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function(binary) {\n  this.flags.binary = binary;\n  return this;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./lib/socket.js","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/to-array/index.js\n// module id = 26\n// module chunks = 0","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/on.js","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/component-bind/index.js\n// module id = 28\n// module chunks = 0","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/backo2/index.js\n// module id = 29\n// module chunks = 0"],"sourceRoot":""}